{"version":3,"sources":["Components/GoodsList.jsx","Components/Button.jsx","Components/Select.jsx","App.js","index.js"],"names":["GoodsList","goods","map","product","key","Button","onClick","text","type","Select","optionsAmountGoods","minProductLength","onChange","value","number","goodsFromServer","App","state","isGoodsVisible","goodsData","visibleGoods","setState","reverseListOfGoods","reverse","sortAlphabetically","sort","a","b","localeCompare","resetListOfGoods","sortByLength","length","filterGoodsByLength","event","filter","item","target","Array","fill","_","index","this","className","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMC,KAAI,SAAAC,GAAO,OAChB,wBAAIC,IAAKD,GACNA,QCJIE,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACpB,4BACED,QAASA,EACTE,KAAK,UAEJD,ICLQE,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,iBAAkBC,EAAzC,EAAyCA,SAAzC,OACpB,4BACEA,SAAUA,EACVC,MAAOF,GAEND,EAAmBR,KAAI,SAAAY,GAAM,OAC5B,4BACED,MAAOC,EACPV,IAAKU,GAEJA,QCPHC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAgGaC,E,4MA5FbC,MAAQ,CACNC,gBAAgB,EAChBC,UAAWJ,EACXJ,iBAAkB,G,EAGpBS,aAAe,WACb,EAAKC,SAAS,CACZH,gBAAgB,K,EAIpBI,mBAAqB,kBACnB,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBE,UAAW,YAAIF,EAAME,WAAWI,e,EAIpCC,mBAAqB,kBACnB,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBE,UAAW,YAAIF,EAAME,WAAWM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAInEE,iBAAmB,kBACjB,EAAKR,SAAS,CACZF,UAAWJ,EACXJ,iBAAkB,K,EAItBmB,aAAe,kBACb,EAAKT,UAAS,SAAAJ,GAAK,MAAK,CACtBE,UAAW,YAAIF,EAAME,WAAWM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAIhEC,oBAAsB,SAAAC,GAAK,OACzB,EAAKZ,SAAS,CACZF,UACEJ,EAAgBmB,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,QAAUE,EAAMG,OAAOvB,Y,4CAIjE,WACE,IAAMH,EACF2B,MAAMtB,EAAgBgB,QAAQO,OAAOpC,KAAI,SAACqC,EAAGC,GAAJ,OAAcA,EAAQ,KACnE,EAA6CC,KAAKxB,MAA1CC,EAAR,EAAQA,eAAgBP,EAAxB,EAAwBA,iBAExB,OACE,yBAAK+B,UAAU,OAEXxB,EAEI,oCACE,kBAAC,EAAD,CAAWjB,MAAOwC,KAAKxB,MAAME,YAC7B,kBAAC,EAAD,CACEb,QAASmC,KAAKnB,mBACdf,KAAK,YAEP,kBAAC,EAAD,CACED,QAASmC,KAAKjB,mBACdjB,KAAK,wBAEP,kBAAC,EAAD,CACED,QAASmC,KAAKZ,iBACdtB,KAAK,UAEP,kBAAC,EAAD,CACED,QAASmC,KAAKX,aACdvB,KAAK,mBAEP,kBAAC,EAAD,CACEK,SAAU6B,KAAKT,oBACftB,mBAAoBA,EACpBC,iBAAkBA,KAKtB,kBAAC,EAAD,CACEL,QAASmC,KAAKrB,aACdP,MAAOF,EACPJ,KAAK,e,GApFHoC,aCflBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.46791f26.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(product => (\n      <li key={product}>\n        {product}\n      </li>\n    ))}\n  </ul>\n)\n\n\n\nGoodsList.propTypes = {\n  goods:\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick, text }) => (\n  <button\n    onClick={onClick}\n    type=\"button\"\n  >\n    {text}\n  </button>\n)\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ optionsAmountGoods, minProductLength, onChange }) => (\n  <select\n    onChange={onChange}\n    value={minProductLength}\n  >\n    {optionsAmountGoods.map(number => (\n      <option\n        value={number}\n        key={number}\n      >\n        {number}\n      </option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = {\n  optionsAmountGoods: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { GoodsList } from './Components/GoodsList';\nimport { Button } from './Components/Button';\nimport { Select } from './Components/Select';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    isGoodsVisible: false,\n    goodsData: goodsFromServer,\n    minProductLength: 1,\n  }\n\n  visibleGoods = () => {\n    this.setState({\n      isGoodsVisible: true,\n    });\n  }\n\n  reverseListOfGoods = () => (\n    this.setState(state => ({\n      goodsData: [...state.goodsData].reverse(),\n    }))\n  )\n\n  sortAlphabetically = () => (\n    this.setState(state => ({\n      goodsData: [...state.goodsData].sort((a, b) => a.localeCompare(b)),\n    }))\n  )\n\n  resetListOfGoods = () => (\n    this.setState({\n      goodsData: goodsFromServer,\n      minProductLength: 0,\n    })\n  )\n\n  sortByLength = () => (\n    this.setState(state => ({\n      goodsData: [...state.goodsData].sort((a, b) => a.length - b.length),\n    }))\n  )\n\n  filterGoodsByLength = event => (\n    this.setState({\n      goodsData:\n        goodsFromServer.filter(item => item.length >= event.target.value),\n    })\n  );\n\n  render() {\n    const optionsAmountGoods\n      = Array(goodsFromServer.length).fill().map((_, index) => index + 1);\n    const { isGoodsVisible, minProductLength } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          isGoodsVisible\n            ? (\n              <>\n                <GoodsList goods={this.state.goodsData} />\n                <Button\n                  onClick={this.reverseListOfGoods}\n                  text=\"Reverse\"\n                />\n                <Button\n                  onClick={this.sortAlphabetically}\n                  text=\"Sort alphabetically\"\n                />\n                <Button\n                  onClick={this.resetListOfGoods}\n                  text=\"Reset\"\n                />\n                <Button\n                  onClick={this.sortByLength}\n                  text=\"Sort by length\"\n                />\n                <Select\n                  onChange={this.filterGoodsByLength}\n                  optionsAmountGoods={optionsAmountGoods}\n                  minProductLength={minProductLength}\n                />\n              </>\n            )\n            : (\n              <Button\n                onClick={this.visibleGoods}\n                value={minProductLength}\n                text=\"Start\"\n              />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}